{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/chat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      console.log(data);\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: messageList.map(messageContent => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          id: username === messageContent.author ? \"you\" : \"other\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: messageContent.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"time\",\n                children: messageContent.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"author\",\n                children: messageContent.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type here...\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        },\n        onKeyPress: event => {\n          event.key === \"Enter\" && sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \" \\u25BA \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/chat.js"],"names":["useEffect","useState","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data","console","log","map","messageContent","event","target","value","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function Chat({ socket, username, room }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time:\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      console.log(data);\n      setMessageList((list) => [...list, data]);\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <p>Live Chat</p>\n      </div>\n      <div className=\"chat-body\">\n        {messageList.map((messageContent) => {\n          return (\n            <div\n              className=\"message\"\n              id={username === messageContent.author ? \"you\" : \"other\"}\n            >\n              <div>\n                <div className=\"message-content\">\n                  <p>{messageContent.message}</p>\n                </div>\n                <div className=\"message-meta\">\n                  <p id=\"time\">{messageContent.time}</p>\n                  <p id=\"author\">{messageContent.author}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          placeholder=\"Type here...\"\n          onChange={(event) => {\n            setCurrentMessage(event.target.value);\n          }}\n          onKeyPress={(event) => {\n            event.key === \"Enter\" && sendMessage();\n          }}\n        />\n        <button onClick={sendMessage}> &#9658; </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}