{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\"; // import ScrollToBottom from \"react-scroll-to-bottom\";\n// import AutoScroll from \"@brianmcallister/react-auto-scroll\";\n\nimport Moment from \"react-moment\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    receiver,\n    chatData\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"auto\"\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    }); // setMessageList(chatData);\n  }, [socket]);\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://picsum.photos/g/40/40\",\n              alt: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: receiver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: messageList.map((messageContent, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef,\n            className: username === messageContent.sender ? \"outgoing\" : \"incoming\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-msg-time\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"HH:mm\",\n                    id: \"time\",\n                    children: messageContent.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, messageContent.message + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"foot\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"msg\",\n          placeholder: \"Type a message...\",\n          value: currentMessage,\n          onChange: event => {\n            setCurrentMessage(event.target.value);\n          },\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"W0mTeTlz62pqWTn6+r+kkrQTeCY=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/chat.js"],"names":["React","useEffect","useState","useRef","Moment","SendIcon","Chat","socket","username","receiver","chatData","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","sender","message","time","Date","emit","list","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","on","data","map","messageContent","index","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\n// import AutoScroll from \"@brianmcallister/react-auto-scroll\";\nimport Moment from \"react-moment\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nfunction Chat({ socket, username, receiver, chatData }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date(),\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"auto\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList((list) => [...list, data]);\n    });\n    // setMessageList(chatData);\n  }, [socket]);\n\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat_box\">\n        <div className=\"head\">\n          <div className=\"user\">\n            <div className=\"avatar\">\n              <img src=\"https://picsum.photos/g/40/40\" alt=\"test\" />\n            </div>\n            <div className=\"name\">{receiver}</div>\n          </div>\n        </div>\n        <div className=\"body\">\n          {messageList.map((messageContent, index) => {\n            return (\n              <div\n                ref={messagesEndRef}\n                className={\n                  username === messageContent.sender ? \"outgoing\" : \"incoming\"\n                }\n                key={messageContent.message + index}\n              >\n                <div className=\"bubble\">\n                  <div className=\"d-inline\">\n                    <span>{messageContent.message}</span>\n                    <span className=\"font-msg-time\">\n                      <Moment format=\"HH:mm\" id=\"time\">\n                        {messageContent.time}\n                      </Moment>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {/* <div className=\"typing\">\n            <div className=\"bubble\">\n              <div className=\"ellipsis dot_1\"></div>\n              <div className=\"ellipsis dot_2\"></div>\n              <div className=\"ellipsis dot_3\"></div>\n            </div>\n          </div> */}\n        </div>\n        <div className=\"foot\">\n          <input\n            type=\"text\"\n            className=\"msg\"\n            placeholder=\"Type a message...\"\n            value={currentMessage}\n            onChange={(event) => {\n              setCurrentMessage(event.target.value);\n            }}\n            onKeyPress={(event) => {\n              event.key === \"Enter\" && sendMessage();\n            }}\n          />\n          <button type=\"submit\" onClick={sendMessage}>\n            <SendIcon></SendIcon>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}