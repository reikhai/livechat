{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Moment from \"react-moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  chatSection: {\n    width: \"100%\" // height: \"80vh\",\n\n  },\n  headBG: {\n    backgroundColor: \"#e0e0e0\"\n  },\n  borderRight500: {\n    borderRight: \"1px solid #e0e0e0\"\n  },\n  messageArea: {\n    height: \"70vh\",\n    overflowY: \"auto\"\n  },\n  from: {\n    // width: \"100%\",\n    textAlign: \"right\",\n    fontSize: \"8px\",\n    margin: \"5px 0px 0px 25px\"\n  },\n  messageTextSelf: {\n    float: \"right\",\n    background: \"#683db8\",\n    color: \"#FFF\",\n    padding: \"9px\",\n    fontSize: \"13px\",\n    borderRadius: \"5px\",\n    marginBottom: \"3px\"\n  },\n  messageTextOpponent: {\n    float: \"left\",\n    background: \"#ecf1f8\",\n    color: \"#4a4a4a\",\n    padding: \"9px\",\n    fontSize: \"13px\",\n    borderRadius: \"5px\",\n    marginBottom: \"3px\"\n  }\n});\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    receiver,\n    chatData\n  } = _ref;\n  const classes = useStyles();\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    }); // setMessageList(chatData);\n  }, [socket]);\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://picsum.photos/g/40/40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"name\",\n            children: receiver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"bar_tool\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"alink\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"alink\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"alink\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-ellipsis-v\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"outgoing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"bubble\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Hey, Father's Day is coming up..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"outgoing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"bubble lower\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nah, it's cool.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ellipsis dot_1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ellipsis dot_2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ellipsis dot_3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"foot\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"msg\",\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this) // <div className=\"chat-box\">\n  //   <div className=\"header\">\n  //     <div className=\"avatar-wrapper avatar-big\">\n  //       <img\n  //         src=\"https://znews-photo.zadn.vn/w660/Uploaded/pnbcuhbatgunb/2020_03_23/i13863960814_1.jpg\"\n  //         alt=\"avatar\"\n  //       />\n  //     </div>\n  //     <span className=\"name\">{receiver}</span>\n  //     <span className=\"options\">\n  //       <i className=\"fas fa-ellipsis-h\"></i>\n  //     </span>\n  //   </div>\n  //   <div className=\"chat-room\">\n  //     <ScrollToBottom className=\"message-container\">\n  //       {messageList.map((messageContent, index) => {\n  //         return (\n  //           <div\n  //             className={\n  //               username === messageContent.sender\n  //                 ? \"message message-right\"\n  //                 : \"message message-left\"\n  //             }\n  //           >\n  //             <div className=\"avatar-wrapper avatar-small\">\n  //               <img\n  //                 src=\"https://znews-photo.zadn.vn/w660/Uploaded/pnbcuhbatgunb/2020_03_23/i13863960814_1.jpg\"\n  //                 alt=\"avatar\"\n  //               />\n  //             </div>\n  //             <div\n  //               className={\n  //                 username === messageContent.sender\n  //                   ? \"bubble bubble-light\"\n  //                   : \"bubble bubble-dark\"\n  //               }\n  //             >\n  //               {messageContent.message}\n  //             </div>\n  //             <Moment format=\"HH:mm\" id=\"time\">\n  //               {messageContent.time}\n  //             </Moment>\n  //           </div>\n  //         );\n  //       })}\n  //     </ScrollToBottom>\n  //   </div>\n  //   <div className=\"type-area\">\n  //     <div className=\"input-wrapper\">\n  //       <input\n  //         type=\"text\"\n  //         id=\"inputText\"\n  //         placeholder=\"Type messages here...\"\n  //         value={currentMessage}\n  //         onChange={(event) => {\n  //           setCurrentMessage(event.target.value);\n  //         }}\n  //         onKeyPress={(event) => {\n  //           event.key === \"Enter\" && sendMessage();\n  //         }}\n  //       />\n  //     </div>\n  //     <button className=\"button-send\" onClick={sendMessage}>\n  //       Send\n  //     </button>\n  //   </div>\n  // </div>\n  // <div>\n  //   <Grid container>\n  //     <Grid item={true} xs={12}>\n  //       <Typography variant=\"h5\" className=\"header-message\">\n  //         Chat\n  //       </Typography>\n  //     </Grid>\n  //   </Grid>\n  //   <Grid container component={Paper} className={classes.chatSection}>\n  //     <Grid item={true} xs={3} className={classes.borderRight500}>\n  //       <List>\n  //         <ListItem button key=\"RemySharp\">\n  //           <ListItemIcon>\n  //             <Avatar\n  //               alt=\"Remy Sharp\"\n  //               src=\"https://material-ui.com/static/images/avatar/1.jpg\"\n  //             />\n  //           </ListItemIcon>\n  //           <ListItemText primary={receiver}>{receiver}</ListItemText>\n  //           <ListItemText secondary=\"online\" align=\"right\"></ListItemText>\n  //         </ListItem>\n  //         <Divider />\n  //       </List>\n  //     </Grid>\n  //     <Grid item={true} xs={9}>\n  //       <List className={classes.messageArea}>\n  //         <ScrollToBottom className=\"message-container\">\n  //           {messageList.map((messageContent, index) => {\n  //             return (\n  //               <ListItem key={messageContent.message + index}>\n  //                 <Grid container>\n  //                   <Grid item={true} xs={12}>\n  //                     <div className=\"chat-messages\">\n  //                       <div\n  //                         className={\n  //                           username === messageContent.sender\n  //                             ? classes.messageTextSelf\n  //                             : classes.messageTextOpponent\n  //                         }\n  //                       >\n  //                         {messageContent.message}\n  //                         <div className={classes.from}>\n  //                           <Moment format=\"HH:mm\" id=\"time\">\n  //                             {messageContent.time}\n  //                           </Moment>\n  //                         </div>\n  //                       </div>\n  //                     </div>\n  //                   </Grid>\n  //                 </Grid>\n  //               </ListItem>\n  //             );\n  //           })}\n  //         </ScrollToBottom>\n  //       </List>\n  //       <Divider />\n  //       <Grid container style={{ padding: \"20px\" }}>\n  //         <Grid item={true} xs={11}>\n  //           <TextField\n  //             id=\"outlined-basic-email\"\n  //             label=\"Type Something\"\n  //             fullWidth\n  //             value={currentMessage}\n  //             placeholder=\"Hey...\"\n  //             onChange={(event) => {\n  //               setCurrentMessage(event.target.value);\n  //             }}\n  //             onKeyPress={(event) => {\n  //               event.key === \"Enter\" && sendMessage();\n  //             }}\n  //           />\n  //         </Grid>\n  //         <Grid item={true} xs={1} align=\"right\">\n  //           <Fab color=\"primary\" aria-label=\"add\">\n  //             <SendIcon />\n  //           </Fab>\n  //         </Grid>\n  //       </Grid>\n  //     </Grid>\n  //   </Grid>\n  // </div>\n  // <div className=\"chat-window\">\n  //   <div className=\"chat-header\">\n  //     <p>{receiver}</p>\n  //   </div>\n  //   <div className=\"chat-body\">\n  // <ScrollToBottom className=\"message-container\">\n  //   {messageList.map((messageContent, index) => {\n  //     return (\n  //       <div\n  //         className=\"message\"\n  //         id={username === messageContent.sender ? \"other\" : \"you\"}\n  //         key={messageContent.message + index}\n  //       >\n  //         <div>\n  // <div className=\"message-content\">\n  //   <p>{messageContent.message}</p>\n  // </div>\n  //           <div className=\"message-meta\">\n  //             <Moment format=\"HH:mm\" id=\"time\">\n  //               {messageContent.time}\n  //             </Moment>\n  //             <p id=\"author\">{messageContent.sender}</p>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     );\n  //   })}\n  // </ScrollToBottom>\n  //   </div>\n  //   <div className=\"chat-footer\">\n  //     <input\n  //       type=\"text\"\n  // value={currentMessage}\n  // placeholder=\"Hey...\"\n  // onChange={(event) => {\n  //   setCurrentMessage(event.target.value);\n  // }}\n  // onKeyPress={(event) => {\n  //   event.key === \"Enter\" && sendMessage();\n  // }}\n  //     />\n  //     <button onClick={sendMessage}>&#9658;</button>\n  //   </div>\n  // </div>\n  ;\n}\n\n_s(Chat, \"thw5txqtORz6bn1C1/E5xCQlsbg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/chat.js"],"names":["React","useEffect","useState","ScrollToBottom","Moment","makeStyles","Paper","Grid","Box","Divider","TextField","Typography","List","ListItem","ListItemIcon","ListItemText","Avatar","Fab","SendIcon","useStyles","table","minWidth","chatSection","width","headBG","backgroundColor","borderRight500","borderRight","messageArea","height","overflowY","from","textAlign","fontSize","margin","messageTextSelf","float","background","color","padding","borderRadius","marginBottom","messageTextOpponent","Chat","socket","username","receiver","chatData","classes","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","sender","message","time","Date","emit","list","on","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Moment from \"react-moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: \"100%\",\n    // height: \"80vh\",\n  },\n  headBG: {\n    backgroundColor: \"#e0e0e0\",\n  },\n  borderRight500: {\n    borderRight: \"1px solid #e0e0e0\",\n  },\n  messageArea: {\n    height: \"70vh\",\n    overflowY: \"auto\",\n  },\n  from: {\n    // width: \"100%\",\n    textAlign: \"right\",\n    fontSize: \"8px\",\n    margin: \"5px 0px 0px 25px\",\n  },\n\n  messageTextSelf: {\n    float: \"right\",\n    background: \"#683db8\",\n    color: \"#FFF\",\n    padding: \"9px\",\n    fontSize: \"13px\",\n    borderRadius: \"5px\",\n    marginBottom: \"3px\",\n  },\n\n  messageTextOpponent: {\n    float: \"left\",\n    background: \"#ecf1f8\",\n    color: \"#4a4a4a\",\n    padding: \"9px\",\n    fontSize: \"13px\",\n    borderRadius: \"5px\",\n    marginBottom: \"3px\",\n  },\n});\n\nfunction Chat({ socket, username, receiver, chatData }) {\n  const classes = useStyles();\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date(),\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList((list) => [...list, data]);\n    });\n    // setMessageList(chatData);\n  }, [socket]);\n\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n\n  return (\n    <div class=\"container\">\n      <div class=\"chat_box\">\n        <div class=\"head\">\n          <div class=\"user\">\n            <div class=\"avatar\">\n              <img src=\"https://picsum.photos/g/40/40\" />\n            </div>\n            <div class=\"name\">{receiver}</div>\n          </div>\n          <ul class=\"bar_tool\">\n            <li>\n              <span class=\"alink\">\n                <i class=\"fas fa-phone\"></i>\n              </span>\n            </li>\n            <li>\n              <span class=\"alink\">\n                <i class=\"fas fa-video\"></i>\n              </span>\n            </li>\n            <li>\n              <span class=\"alink\">\n                <i class=\"fas fa-ellipsis-v\"></i>\n              </span>\n            </li>\n          </ul>\n        </div>\n        <div class=\"body\">\n          <div class=\"outgoing\">\n            <div class=\"bubble\">\n              <p>Hey, Father's Day is coming up..</p>\n            </div>\n          </div>\n          <div class=\"outgoing\">\n            <div class=\"bubble lower\">\n              <p>Nah, it's cool.</p>\n            </div>\n          </div>\n          <div class=\"typing\">\n            <div class=\"bubble\">\n              <div class=\"ellipsis dot_1\"></div>\n              <div class=\"ellipsis dot_2\"></div>\n              <div class=\"ellipsis dot_3\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"foot\">\n          <input type=\"text\" class=\"msg\" placeholder=\"Type a message...\" />\n          <button type=\"submit\">\n            <i class=\"fas fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    // <div className=\"chat-box\">\n    //   <div className=\"header\">\n    //     <div className=\"avatar-wrapper avatar-big\">\n    //       <img\n    //         src=\"https://znews-photo.zadn.vn/w660/Uploaded/pnbcuhbatgunb/2020_03_23/i13863960814_1.jpg\"\n    //         alt=\"avatar\"\n    //       />\n    //     </div>\n    //     <span className=\"name\">{receiver}</span>\n    //     <span className=\"options\">\n    //       <i className=\"fas fa-ellipsis-h\"></i>\n    //     </span>\n    //   </div>\n    //   <div className=\"chat-room\">\n    //     <ScrollToBottom className=\"message-container\">\n    //       {messageList.map((messageContent, index) => {\n    //         return (\n    //           <div\n    //             className={\n    //               username === messageContent.sender\n    //                 ? \"message message-right\"\n    //                 : \"message message-left\"\n    //             }\n    //           >\n    //             <div className=\"avatar-wrapper avatar-small\">\n    //               <img\n    //                 src=\"https://znews-photo.zadn.vn/w660/Uploaded/pnbcuhbatgunb/2020_03_23/i13863960814_1.jpg\"\n    //                 alt=\"avatar\"\n    //               />\n    //             </div>\n    //             <div\n    //               className={\n    //                 username === messageContent.sender\n    //                   ? \"bubble bubble-light\"\n    //                   : \"bubble bubble-dark\"\n    //               }\n    //             >\n    //               {messageContent.message}\n    //             </div>\n    //             <Moment format=\"HH:mm\" id=\"time\">\n    //               {messageContent.time}\n    //             </Moment>\n    //           </div>\n    //         );\n    //       })}\n    //     </ScrollToBottom>\n    //   </div>\n    //   <div className=\"type-area\">\n    //     <div className=\"input-wrapper\">\n    //       <input\n    //         type=\"text\"\n    //         id=\"inputText\"\n    //         placeholder=\"Type messages here...\"\n    //         value={currentMessage}\n    //         onChange={(event) => {\n    //           setCurrentMessage(event.target.value);\n    //         }}\n    //         onKeyPress={(event) => {\n    //           event.key === \"Enter\" && sendMessage();\n    //         }}\n    //       />\n    //     </div>\n    //     <button className=\"button-send\" onClick={sendMessage}>\n    //       Send\n    //     </button>\n    //   </div>\n    // </div>\n    // <div>\n    //   <Grid container>\n    //     <Grid item={true} xs={12}>\n    //       <Typography variant=\"h5\" className=\"header-message\">\n    //         Chat\n    //       </Typography>\n    //     </Grid>\n    //   </Grid>\n    //   <Grid container component={Paper} className={classes.chatSection}>\n    //     <Grid item={true} xs={3} className={classes.borderRight500}>\n    //       <List>\n    //         <ListItem button key=\"RemySharp\">\n    //           <ListItemIcon>\n    //             <Avatar\n    //               alt=\"Remy Sharp\"\n    //               src=\"https://material-ui.com/static/images/avatar/1.jpg\"\n    //             />\n    //           </ListItemIcon>\n    //           <ListItemText primary={receiver}>{receiver}</ListItemText>\n    //           <ListItemText secondary=\"online\" align=\"right\"></ListItemText>\n    //         </ListItem>\n    //         <Divider />\n    //       </List>\n    //     </Grid>\n    //     <Grid item={true} xs={9}>\n    //       <List className={classes.messageArea}>\n    //         <ScrollToBottom className=\"message-container\">\n    //           {messageList.map((messageContent, index) => {\n    //             return (\n    //               <ListItem key={messageContent.message + index}>\n    //                 <Grid container>\n    //                   <Grid item={true} xs={12}>\n    //                     <div className=\"chat-messages\">\n    //                       <div\n    //                         className={\n    //                           username === messageContent.sender\n    //                             ? classes.messageTextSelf\n    //                             : classes.messageTextOpponent\n    //                         }\n    //                       >\n    //                         {messageContent.message}\n    //                         <div className={classes.from}>\n    //                           <Moment format=\"HH:mm\" id=\"time\">\n    //                             {messageContent.time}\n    //                           </Moment>\n    //                         </div>\n    //                       </div>\n    //                     </div>\n    //                   </Grid>\n    //                 </Grid>\n    //               </ListItem>\n    //             );\n    //           })}\n    //         </ScrollToBottom>\n    //       </List>\n    //       <Divider />\n    //       <Grid container style={{ padding: \"20px\" }}>\n    //         <Grid item={true} xs={11}>\n    //           <TextField\n    //             id=\"outlined-basic-email\"\n    //             label=\"Type Something\"\n    //             fullWidth\n    //             value={currentMessage}\n    //             placeholder=\"Hey...\"\n    //             onChange={(event) => {\n    //               setCurrentMessage(event.target.value);\n    //             }}\n    //             onKeyPress={(event) => {\n    //               event.key === \"Enter\" && sendMessage();\n    //             }}\n    //           />\n    //         </Grid>\n    //         <Grid item={true} xs={1} align=\"right\">\n    //           <Fab color=\"primary\" aria-label=\"add\">\n    //             <SendIcon />\n    //           </Fab>\n    //         </Grid>\n    //       </Grid>\n    //     </Grid>\n    //   </Grid>\n    // </div>\n\n    // <div className=\"chat-window\">\n    //   <div className=\"chat-header\">\n    //     <p>{receiver}</p>\n    //   </div>\n    //   <div className=\"chat-body\">\n    // <ScrollToBottom className=\"message-container\">\n    //   {messageList.map((messageContent, index) => {\n    //     return (\n    //       <div\n    //         className=\"message\"\n    //         id={username === messageContent.sender ? \"other\" : \"you\"}\n    //         key={messageContent.message + index}\n    //       >\n    //         <div>\n    // <div className=\"message-content\">\n    //   <p>{messageContent.message}</p>\n    // </div>\n    //           <div className=\"message-meta\">\n    //             <Moment format=\"HH:mm\" id=\"time\">\n    //               {messageContent.time}\n    //             </Moment>\n\n    //             <p id=\"author\">{messageContent.sender}</p>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     );\n    //   })}\n    // </ScrollToBottom>\n    //   </div>\n    //   <div className=\"chat-footer\">\n    //     <input\n    //       type=\"text\"\n    // value={currentMessage}\n    // placeholder=\"Hey...\"\n    // onChange={(event) => {\n    //   setCurrentMessage(event.target.value);\n    // }}\n    // onKeyPress={(event) => {\n    //   event.key === \"Enter\" && sendMessage();\n    // }}\n    //     />\n    //     <button onClick={sendMessage}>&#9658;</button>\n    //   </div>\n    // </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}