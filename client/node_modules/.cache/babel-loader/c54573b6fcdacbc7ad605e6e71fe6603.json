{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Moment from \"react-moment\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport InsertEmoticonIcon from \"@mui/icons-material/InsertEmoticon\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { motion, AnimateSharedLayout, LazyMotion, domAnimation, m } from \"framer-motion\";\nimport data from \"emoji-mart/data/google.json\";\nimport { NimblePicker } from \"emoji-mart\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport Fab from \"@mui/material/Fab\";\nimport ContactPageRoundedIcon from \"@mui/icons-material/ContactPageRounded\";\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\nimport CameraAltRoundedIcon from \"@mui/icons-material/CameraAltRounded\";\nimport PanoramaRoundedIcon from \"@mui/icons-material/PanoramaRounded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst actions = [{\n  icon: /*#__PURE__*/_jsxDEV(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    children: /*#__PURE__*/_jsxDEV(ContactPageRoundedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this),\n  name: \"Copy\"\n}, {\n  icon: /*#__PURE__*/_jsxDEV(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    children: /*#__PURE__*/_jsxDEV(AssignmentRoundedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this),\n  name: \"Save\"\n}, {\n  icon: /*#__PURE__*/_jsxDEV(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    children: /*#__PURE__*/_jsxDEV(CameraAltRoundedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this),\n  name: \"Print\"\n}, {\n  icon: /*#__PURE__*/_jsxDEV(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    children: /*#__PURE__*/_jsxDEV(PanoramaRoundedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this),\n  name: \"Share\"\n}];\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    receiver,\n    chatData\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [showPicker, setShowPicker] = useState(false);\n  const [showCloseIcon, setCloseIcon] = useState(false);\n  const [onlineStatus, setOnlineStatus] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const [showAttach, setShowAttach] = useState(false);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const onEmojiClick = emojiObject => {\n    setCurrentMessage(prevInput => prevInput + emojiObject.native);\n  };\n\n  const showEmojiPicker = () => {\n    setShowPicker(true);\n    setCloseIcon(true);\n  };\n\n  const closeEmojiPicker = () => {\n    setShowPicker(false);\n    setCloseIcon(false);\n  };\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date()\n      };\n      await socket.emit(\"send_message\", messageData);\n      await socket.emit(\"login\", username);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"online\", data => {\n      if (receiver in JSON.parse(data)) {\n        setOnlineStatus(\"Online\");\n      } else {\n        setOnlineStatus(\"Offline\");\n      }\n    });\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket, receiver]);\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://picsum.photos/g/40/40\",\n              alt: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: [receiver, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"online-font\",\n              children: onlineStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: messageList.map((messageContent, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef,\n            className: username === messageContent.sender ? \"outgoing\" : \"incoming\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-msg-time\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"HH:mm\",\n                    id: \"time\",\n                    children: messageContent.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, messageContent.message + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), showPicker && /*#__PURE__*/_jsxDEV(LazyMotion, {\n        features: domAnimation,\n        children: /*#__PURE__*/_jsxDEV(m.div, {\n          className: \"emoji-container\",\n          layout: true,\n          children: /*#__PURE__*/_jsxDEV(NimblePicker, {\n            include: [\"recent\", \"smileys\", \"people\", \"foods\"],\n            set: \"google\",\n            data: data,\n            style: {\n              width: \"100%\"\n            },\n            showPreview: false,\n            showSkinTones: false,\n            onClick: onEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"foot\",\n        children: /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n          children: [showCloseIcon && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(motion.button, {\n              onClick: closeEmojiPicker,\n              initial: false,\n              whileHover: {\n                scale: 1.1\n              },\n              whileTap: {\n                scale: 0.9\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(motion.div, {\n            layout: true,\n            style: {\n              display: \"flex\",\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: showEmojiPicker,\n              children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                \"aria-label\": \"Attach\",\n                onClick: () => setShowAttach(!showAttach),\n                children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {\n                  id: \"attach\",\n                  className: `chat__input-icon ${showAttach ? \"chat__input-icon--pressed\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `chat__attach ${showAttach ? \"chat__attach--active\" : \"\"}`,\n                children: actions.map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"chat__attach-btn\",\n                  children: btn.icon\n                }, btn.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"msg\",\n              placeholder: \"Type a message...\",\n              value: currentMessage,\n              onChange: event => {\n                setCurrentMessage(event.target.value);\n              },\n              onKeyPress: event => {\n                event.key === \"Enter\" && sendMessage();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: sendMessage,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"XHyCebSeFEQYZ2K0Gxt4jfBH8NY=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/chat.js"],"names":["React","useEffect","useState","useRef","Moment","SendIcon","InsertEmoticonIcon","CloseIcon","motion","AnimateSharedLayout","LazyMotion","domAnimation","m","data","NimblePicker","AttachFileIcon","Fab","ContactPageRoundedIcon","AssignmentRoundedIcon","CameraAltRoundedIcon","PanoramaRoundedIcon","actions","icon","name","Chat","socket","username","receiver","chatData","currentMessage","setCurrentMessage","messageList","setMessageList","showPicker","setShowPicker","showCloseIcon","setCloseIcon","onlineStatus","setOnlineStatus","messagesEndRef","showAttach","setShowAttach","scrollToBottom","current","scrollIntoView","behavior","onEmojiClick","emojiObject","prevInput","native","showEmojiPicker","closeEmojiPicker","sendMessage","messageData","sender","message","time","Date","emit","list","on","JSON","parse","map","messageContent","index","width","scale","display","btn","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Moment from \"react-moment\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport InsertEmoticonIcon from \"@mui/icons-material/InsertEmoticon\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport {\n  motion,\n  AnimateSharedLayout,\n  LazyMotion,\n  domAnimation,\n  m,\n} from \"framer-motion\";\nimport data from \"emoji-mart/data/google.json\";\nimport { NimblePicker } from \"emoji-mart\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport Fab from \"@mui/material/Fab\";\nimport ContactPageRoundedIcon from \"@mui/icons-material/ContactPageRounded\";\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\nimport CameraAltRoundedIcon from \"@mui/icons-material/CameraAltRounded\";\nimport PanoramaRoundedIcon from \"@mui/icons-material/PanoramaRounded\";\nconst actions = [\n  {\n    icon: (\n      <Fab color=\"secondary\" aria-label=\"edit\">\n        <ContactPageRoundedIcon />\n      </Fab>\n    ),\n    name: \"Copy\",\n  },\n  {\n    icon: (\n      <Fab color=\"secondary\" aria-label=\"edit\">\n        <AssignmentRoundedIcon />\n      </Fab>\n    ),\n    name: \"Save\",\n  },\n  {\n    icon: (\n      <Fab color=\"secondary\" aria-label=\"edit\">\n        <CameraAltRoundedIcon />\n      </Fab>\n    ),\n    name: \"Print\",\n  },\n  {\n    icon: (\n      <Fab color=\"secondary\" aria-label=\"edit\">\n        <PanoramaRoundedIcon />\n      </Fab>\n    ),\n    name: \"Share\",\n  },\n];\n\nfunction Chat({ socket, username, receiver, chatData }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [showPicker, setShowPicker] = useState(false);\n  const [showCloseIcon, setCloseIcon] = useState(false);\n  const [onlineStatus, setOnlineStatus] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const [showAttach, setShowAttach] = useState(false);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const onEmojiClick = (emojiObject) => {\n    setCurrentMessage((prevInput) => prevInput + emojiObject.native);\n  };\n\n  const showEmojiPicker = () => {\n    setShowPicker(true);\n    setCloseIcon(true);\n  };\n\n  const closeEmojiPicker = () => {\n    setShowPicker(false);\n    setCloseIcon(false);\n  };\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date(),\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      await socket.emit(\"login\", username);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"online\", (data) => {\n      if (receiver in JSON.parse(data)) {\n        setOnlineStatus(\"Online\");\n      } else {\n        setOnlineStatus(\"Offline\");\n      }\n    });\n\n    socket.on(\"receive_message\", (data) => {\n      setMessageList((list) => [...list, data]);\n    });\n  }, [socket, receiver]);\n\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat_box\">\n        <div className=\"head\">\n          <div className=\"user\">\n            <div className=\"avatar\">\n              <img src=\"https://picsum.photos/g/40/40\" alt=\"test\" />\n            </div>\n            <div className=\"name\">\n              {receiver}\n              <div className=\"online-font\">{onlineStatus}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"body\">\n          {messageList.map((messageContent, index) => {\n            return (\n              <div\n                ref={messagesEndRef}\n                className={\n                  username === messageContent.sender ? \"outgoing\" : \"incoming\"\n                }\n                key={messageContent.message + index}\n              >\n                <div className=\"bubble\">\n                  <div className=\"d-inline\">\n                    <span>{messageContent.message}</span>\n                    <span className=\"font-msg-time\">\n                      <Moment format=\"HH:mm\" id=\"time\">\n                        {messageContent.time}\n                      </Moment>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          {/* <div className=\"typing\">\n            <div className=\"bubble\">\n              <div className=\"ellipsis dot_1\"></div>\n              <div className=\"ellipsis dot_2\"></div>\n              <div className=\"ellipsis dot_3\"></div>\n            </div>\n          </div> */}\n        </div>\n\n        {showPicker && (\n          <LazyMotion features={domAnimation}>\n            <m.div className=\"emoji-container\" layout>\n              <NimblePicker\n                include={[\"recent\", \"smileys\", \"people\", \"foods\"]}\n                set=\"google\"\n                data={data}\n                style={{ width: \"100%\" }}\n                showPreview={false}\n                showSkinTones={false}\n                onClick={onEmojiClick}\n              />\n            </m.div>\n          </LazyMotion>\n        )}\n        <div className=\"foot\">\n          <AnimateSharedLayout>\n            {showCloseIcon && (\n              <>\n                <motion.button\n                  onClick={closeEmojiPicker}\n                  initial={false}\n                  whileHover={{ scale: 1.1 }}\n                  whileTap={{ scale: 0.9 }}\n                >\n                  <CloseIcon></CloseIcon>\n                </motion.button>\n              </>\n            )}\n            <motion.div layout style={{ display: \"flex\", width: \"100%\" }}>\n              <button onClick={showEmojiPicker}>\n                <InsertEmoticonIcon></InsertEmoticonIcon>\n              </button>\n\n              <div>\n                <button\n                  aria-label=\"Attach\"\n                  onClick={() => setShowAttach(!showAttach)}\n                >\n                  <AttachFileIcon\n                    id=\"attach\"\n                    className={`chat__input-icon ${\n                      showAttach ? \"chat__input-icon--pressed\" : \"\"\n                    }`}\n                  ></AttachFileIcon>\n                </button>\n\n                <div\n                  className={`chat__attach ${\n                    showAttach ? \"chat__attach--active\" : \"\"\n                  }`}\n                >\n                  {actions.map((btn) => (\n                    <button className=\"chat__attach-btn\" key={btn.name}>\n                      {btn.icon}\n                    </button>\n                  ))}\n                </div>\n              </div>\n              <input\n                type=\"text\"\n                className=\"msg\"\n                placeholder=\"Type a message...\"\n                value={currentMessage}\n                onChange={(event) => {\n                  setCurrentMessage(event.target.value);\n                }}\n                onKeyPress={(event) => {\n                  event.key === \"Enter\" && sendMessage();\n                }}\n              />\n              <button type=\"submit\" onClick={sendMessage}>\n                <SendIcon></SendIcon>\n              </button>\n            </motion.div>\n          </AnimateSharedLayout>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}