{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\"; // import ScrollToBottom from \"react-scroll-to-bottom\";\n// import AutoScroll from \"@brianmcallister/react-auto-scroll\";\n\nimport Moment from \"react-moment\";\nimport SendIcon from \"@material-ui/icons/Send\"; // import Picker from \"emoji-picker-react\";\n\nimport InsertEmoticonIcon from \"@mui/icons-material/InsertEmoticon\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    receiver,\n    chatData\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [showPicker, setShowPicker] = useState(false);\n  const [showCloseIcon, setCloseIcon] = useState(false); // const [push, setPush] = useState(0);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const onEmojiClick = emojiObject => {\n    setCurrentMessage(prevInput => prevInput + emojiObject.native);\n  };\n\n  const showEmojiPicker = () => {\n    setShowPicker(true);\n    setCloseIcon(true);\n  };\n\n  const closeEmojiPicker = () => {\n    setShowPicker(false);\n    setCloseIcon(false);\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    }); // setMessageList(chatData);\n  }, [socket]);\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://picsum.photos/g/40/40\",\n              alt: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: receiver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: messageList.map((messageContent, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef,\n            className: username === messageContent.sender ? \"outgoing\" : \"incoming\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-msg-time\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"HH:mm\",\n                    id: \"time\",\n                    children: messageContent.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, messageContent.message + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), showPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-container animated animatedFadeInUp fadeInUp\",\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          set: \"apple\",\n          style: {\n            width: \"100%\"\n          },\n          tooltip: false,\n          showPreview: false,\n          showSkinTones: false,\n          onClick: onEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"foot\",\n        children: [showCloseIcon && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeEmojiPicker,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(motion.div, {\n          style: {\n            display: \"flex\",\n            width: \"100%\"\n          },\n          cx: 500,\n          animate: {\n            cx: [null, 100, 200]\n          },\n          transition: {\n            duration: 3,\n            times: [0, 0.2, 1]\n          } // animate={{ x: push }}\n          // transition={{ ease: \"eastInOut\", duration: 1 }}\n          // opacity .2s ease-in-out,visibility .2s ease-in-out\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showEmojiPicker,\n            children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"msg\",\n            placeholder: \"Type a message...\",\n            value: currentMessage,\n            onChange: event => {\n              setCurrentMessage(event.target.value);\n            },\n            onKeyPress: event => {\n              event.key === \"Enter\" && sendMessage();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: sendMessage,\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"dEAuMJaNkWw99DUe9spHb0PjBWg=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/chat.js"],"names":["React","useEffect","useState","useRef","Moment","SendIcon","InsertEmoticonIcon","CloseIcon","Picker","motion","Chat","socket","username","receiver","chatData","currentMessage","setCurrentMessage","messageList","setMessageList","showPicker","setShowPicker","showCloseIcon","setCloseIcon","sendMessage","messageData","sender","message","time","Date","emit","list","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","onEmojiClick","emojiObject","prevInput","native","showEmojiPicker","closeEmojiPicker","on","data","map","messageContent","index","width","display","cx","duration","times","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\n// import AutoScroll from \"@brianmcallister/react-auto-scroll\";\nimport Moment from \"react-moment\";\nimport SendIcon from \"@material-ui/icons/Send\";\n// import Picker from \"emoji-picker-react\";\nimport InsertEmoticonIcon from \"@mui/icons-material/InsertEmoticon\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { motion } from \"framer-motion\";\n\nfunction Chat({ socket, username, receiver, chatData }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [showPicker, setShowPicker] = useState(false);\n  const [showCloseIcon, setCloseIcon] = useState(false);\n  // const [push, setPush] = useState(0);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        receiver: receiver,\n        sender: username,\n        message: currentMessage,\n        time: new Date(),\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const onEmojiClick = (emojiObject) => {\n    setCurrentMessage((prevInput) => prevInput + emojiObject.native);\n  };\n\n  const showEmojiPicker = () => {\n    setShowPicker(true);\n    setCloseIcon(true);\n  };\n\n  const closeEmojiPicker = () => {\n    setShowPicker(false);\n    setCloseIcon(false);\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList((list) => [...list, data]);\n    });\n    // setMessageList(chatData);\n  }, [socket]);\n\n  useEffect(() => {\n    setMessageList(chatData);\n  }, [chatData]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat_box\">\n        <div className=\"head\">\n          <div className=\"user\">\n            <div className=\"avatar\">\n              <img src=\"https://picsum.photos/g/40/40\" alt=\"test\" />\n            </div>\n            <div className=\"name\">{receiver}</div>\n          </div>\n        </div>\n        <div className=\"body\">\n          {messageList.map((messageContent, index) => {\n            return (\n              <div\n                ref={messagesEndRef}\n                className={\n                  username === messageContent.sender ? \"outgoing\" : \"incoming\"\n                }\n                key={messageContent.message + index}\n              >\n                <div className=\"bubble\">\n                  <div className=\"d-inline\">\n                    <span>{messageContent.message}</span>\n                    <span className=\"font-msg-time\">\n                      <Moment format=\"HH:mm\" id=\"time\">\n                        {messageContent.time}\n                      </Moment>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          {/* <div className=\"typing\">\n            <div className=\"bubble\">\n              <div className=\"ellipsis dot_1\"></div>\n              <div className=\"ellipsis dot_2\"></div>\n              <div className=\"ellipsis dot_3\"></div>\n            </div>\n          </div> */}\n        </div>\n\n        {showPicker && (\n          <div className=\"emoji-container animated animatedFadeInUp fadeInUp\">\n            <Picker\n              set=\"apple\"\n              style={{ width: \"100%\" }}\n              tooltip={false}\n              showPreview={false}\n              showSkinTones={false}\n              onClick={onEmojiClick}\n            />\n          </div>\n        )}\n        <div className=\"foot\">\n          {showCloseIcon && (\n            <>\n              <button onClick={closeEmojiPicker}>\n                <CloseIcon></CloseIcon>\n              </button>\n            </>\n          )}\n          <motion.div\n            style={{ display: \"flex\", width: \"100%\" }}\n            cx={500}\n            animate={{ cx: [null, 100, 200] }}\n            transition={{ duration: 3, times: [0, 0.2, 1] }}\n            // animate={{ x: push }}\n            // transition={{ ease: \"eastInOut\", duration: 1 }}\n            // opacity .2s ease-in-out,visibility .2s ease-in-out\n          >\n            <button onClick={showEmojiPicker}>\n              <InsertEmoticonIcon></InsertEmoticonIcon>\n            </button>\n            <input\n              type=\"text\"\n              className=\"msg\"\n              placeholder=\"Type a message...\"\n              value={currentMessage}\n              onChange={(event) => {\n                setCurrentMessage(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                event.key === \"Enter\" && sendMessage();\n              }}\n            />\n            <button type=\"submit\" onClick={sendMessage}>\n              <SendIcon></SendIcon>\n            </button>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}