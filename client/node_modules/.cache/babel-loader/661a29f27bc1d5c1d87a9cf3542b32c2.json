{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\"); // const socket = io.connect(\"https://chat-server-ms.herokuapp.com\");\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [chatData, setChatData] = useState([]);\n\n  const joinRoom = () => {\n    // const url = \"http://localhost:3001/get_messages\";\n    // let data = {\n    //   sender: username,\n    //   receiver: receiver,\n    // };\n    // var request = new Request(url, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(data),\n    // });\n    if (username !== \"\" && receiver !== \"\") {\n      socket.emit(\"join_room\", username + \"--with--\" + receiver);\n      socket.once(\"connect\", () => {\n        // USER IS ONLINE\n        socket.on(\"online\", userId => {\n          console.log(userId, \"Is Online!\"); // update online status\n        }); // USER IS OFFLINE\n\n        socket.on(\"offline\", userId => {\n          console.log(userId, \"Is Offline!\"); // update offline status\n        });\n      });\n      setShowChat(true); // fetch(request)\n      //   .then((response) => response.json())\n      //   .then((data) => setChatData(data));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join A Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"John...\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receiver Name...\",\n        onChange: event => {\n          setReceiver(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Start Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      username: username,\n      receiver: receiver,\n      chatData: chatData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xlIf85C6P3koa1CCvoE+T+PDuws=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/App.js"],"names":["io","useState","Chat","socket","connect","App","username","setUsername","receiver","setReceiver","showChat","setShowChat","chatData","setChatData","joinRoom","emit","once","on","userId","console","log","event","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf,C,CACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACrB;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIR,QAAQ,KAAK,EAAb,IAAmBE,QAAQ,KAAK,EAApC,EAAwC;AACtCL,MAAAA,MAAM,CAACY,IAAP,CAAY,WAAZ,EAAyBT,QAAQ,GAAG,UAAX,GAAwBE,QAAjD;AAEAL,MAAAA,MAAM,CAACa,IAAP,CAAY,SAAZ,EAAuB,MAAM;AAC3B;AACAb,QAAAA,MAAM,CAACc,EAAP,CAAU,QAAV,EAAqBC,MAAD,IAAY;AAC9BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,YAApB,EAD8B,CACK;AACpC,SAFD,EAF2B,CAM3B;;AACAf,QAAAA,MAAM,CAACc,EAAP,CAAU,SAAV,EAAsBC,MAAD,IAAY;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,aAApB,EAD+B,CACK;AACrC,SAFD;AAGD,OAVD;AAYAP,MAAAA,WAAW,CAAC,IAAD,CAAX,CAfsC,CAgBtC;AACA;AACA;AACD;AACF,GApCD;;AAsCA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACG,CAACD,QAAD,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,QAAQ,EAAGW,KAAD,IAAW;AACnBd,UAAAA,WAAW,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBZ,UAAAA,WAAW,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AAAQ,QAAA,OAAO,EAAET,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAoBC,QAAC,IAAD;AACE,MAAA,MAAM,EAAEX,MADV;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAIE,MAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA3EQP,G;;KAAAA,G;AA6ET,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./chat\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n// const socket = io.connect(\"https://chat-server-ms.herokuapp.com\");\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [chatData, setChatData] = useState([]);\n\n  const joinRoom = () => {\n    // const url = \"http://localhost:3001/get_messages\";\n\n    // let data = {\n    //   sender: username,\n    //   receiver: receiver,\n    // };\n\n    // var request = new Request(url, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(data),\n    // });\n\n    if (username !== \"\" && receiver !== \"\") {\n      socket.emit(\"join_room\", username + \"--with--\" + receiver);\n\n      socket.once(\"connect\", () => {\n        // USER IS ONLINE\n        socket.on(\"online\", (userId) => {\n          console.log(userId, \"Is Online!\"); // update online status\n        });\n\n        // USER IS OFFLINE\n        socket.on(\"offline\", (userId) => {\n          console.log(userId, \"Is Offline!\"); // update offline status\n        });\n      });\n\n      setShowChat(true);\n      // fetch(request)\n      //   .then((response) => response.json())\n      //   .then((data) => setChatData(data));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!showChat ? (\n        <div className=\"joinChatContainer\">\n          <h3>Join A Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"John...\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Receiver Name...\"\n            onChange={(event) => {\n              setReceiver(event.target.value);\n            }}\n          />\n          <button onClick={joinRoom}>Start Chat</button>\n        </div>\n      ) : (\n        <Chat\n          socket={socket}\n          username={username}\n          receiver={receiver}\n          chatData={chatData}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}