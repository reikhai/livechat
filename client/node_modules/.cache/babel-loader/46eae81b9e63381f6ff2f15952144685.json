{"ast":null,"code":"var _jsxFileName = \"/Users/ISCITY/Desktop/development/livechat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [chatData, setChatData] = useState([]);\n\n  const joinRoom = () => {\n    const url = \"http://localhost:3001/get_messages\";\n    let data = {\n      sender: username,\n      receiver: receiver\n    };\n    var request = new Request(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (username !== \"\" && receiver !== \"\") {\n      socket.emit(\"join_room\", [username, receiver]); // socket.emit(\"private_chat\", receiver);\n\n      setShowChat(true);\n      fetch(request).then(response => response.json()).then(data => setChatData(data));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join A Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"John...\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receiver Name...\",\n        onChange: event => {\n          setReceiver(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join A Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      username: username,\n      receiver: receiver,\n      chatData: chatData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xlIf85C6P3koa1CCvoE+T+PDuws=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ISCITY/Desktop/development/livechat/client/src/App.js"],"names":["io","useState","Chat","socket","connect","App","username","setUsername","receiver","setReceiver","showChat","setShowChat","chatData","setChatData","joinRoom","url","data","sender","request","Request","method","headers","body","JSON","stringify","emit","fetch","then","response","json","event","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACrB,UAAMC,GAAG,GAAG,oCAAZ;AAEA,QAAIC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAEX,QADC;AAETE,MAAAA,QAAQ,EAAEA;AAFD,KAAX;AAKA,QAAIU,OAAO,GAAG,IAAIC,OAAJ,CAAYJ,GAAZ,EAAiB;AAC7BK,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoB;AAK7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALuB,KAAjB,CAAd;;AAQA,QAAIV,QAAQ,KAAK,EAAb,IAAmBE,QAAQ,KAAK,EAApC,EAAwC;AACtCL,MAAAA,MAAM,CAACsB,IAAP,CAAY,WAAZ,EAAyB,CAACnB,QAAD,EAAWE,QAAX,CAAzB,EADsC,CAEtC;;AAEAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAe,MAAAA,KAAK,CAACR,OAAD,CAAL,CACGS,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESX,IAAD,IAAUH,WAAW,CAACG,IAAD,CAF7B;AAGD;AACF,GAzBD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACG,CAACN,QAAD,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,QAAQ,EAAGoB,KAAD,IAAW;AACnBvB,UAAAA,WAAW,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBrB,UAAAA,WAAW,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AAAQ,QAAA,OAAO,EAAElB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAoBC,QAAC,IAAD;AACE,MAAA,MAAM,EAAEX,MADV;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAIE,MAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAhEQP,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./chat\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [chatData, setChatData] = useState([]);\n\n  const joinRoom = () => {\n    const url = \"http://localhost:3001/get_messages\";\n\n    let data = {\n      sender: username,\n      receiver: receiver,\n    };\n\n    var request = new Request(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (username !== \"\" && receiver !== \"\") {\n      socket.emit(\"join_room\", [username, receiver]);\n      // socket.emit(\"private_chat\", receiver);\n\n      setShowChat(true);\n      fetch(request)\n        .then((response) => response.json())\n        .then((data) => setChatData(data));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!showChat ? (\n        <div className=\"joinChatContainer\">\n          <h3>Join A Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"John...\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Receiver Name...\"\n            onChange={(event) => {\n              setReceiver(event.target.value);\n            }}\n          />\n          <button onClick={joinRoom}>Join A Room</button>\n        </div>\n      ) : (\n        <Chat\n          socket={socket}\n          username={username}\n          receiver={receiver}\n          chatData={chatData}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}